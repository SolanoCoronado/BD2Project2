version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    ports:
      - "55070:50070"

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - "55075:50075"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    volumes:
      - ./hive:/docker-entrypoint-initdb.d

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore-postgresql/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    volumes:
      - ./hive:/docker-entrypoint-initdb.d
      - ./hive/products_hive.sql:/docker-entrypoint-initdb.d/products_hive.sql
      - ./data:/app/data
      - ./data:/data

  spark:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=client
      - HOME=/tmp
      - SPARK_LOCAL_DIRS=/tmp
      - SPARK_WORKER_DIR=/tmp
    depends_on:
      - hive-server
    user: root
    volumes:
      - ./hive:/opt/hive/scripts
      - ./data:/data
      - ./:/app
      - ./hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
    command: bash -c "mkdir -p /tmp/.ivy2 && sleep infinity"

  superset-db:
    image: postgres:13
    environment:
      POSTGRES_DB: superset
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
    volumes:
      - superset_db:/var/lib/postgresql/data

  superset:
    image: apache/superset:latest
    environment:
      - SUPERSET_LOAD_EXAMPLES=no
      - SUPERSET_SECRET_KEY=supersecretkey
      - SUPERSET_FEATURES_UPLOAD_AS_DATASET=true
      - UPLOAD_FOLDER=/app/uploads
      - DATABASE_URL=postgresql://superset:superset@superset-db:5432/superset
    ports:
      - "8088:5000"
    volumes:
      - ./uploads:/app/uploads
    command: >
      /bin/sh -c '
        superset db upgrade &&
        superset fab create-admin --username admin --firstname Admin --lastname User --email admin@admin.com --password admin || true &&
        superset init &&
        superset run -h 0.0.0.0 -p 5000'
    depends_on:
      - superset-db
      - spark

  airflow:
    image: apache/airflow:2.8.1
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=KhDBDbI--jl8gE9jpNlkQh6Tn_qr2sJxY8gVovq2Gl8=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://superset:superset@superset-db:5432/superset
      - _PIP_ADDITIONAL_REQUIREMENTS=psycopg2-binary pandas pyhive faker
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/app/scripts
      - ./data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      bash -c "\
        airflow db init && \
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@admin.com || true && \
        airflow webserver & airflow scheduler"
    depends_on:
      - superset-db
      - hive-server
      - spark

  postgres:
    image: postgres:13
    restart: always
    ports:
      - "5432:5432"
    environment:
      DATABASE_HOST: 127.0.0.1
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: password1234
      POSTGRES_DB: DBTC01
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: "prueba01@tc.com"
      PGADMIN_DEFAULT_PASSWORD: "password1234"

volumes:
  namenode:
  datanode:
  superset_db:
